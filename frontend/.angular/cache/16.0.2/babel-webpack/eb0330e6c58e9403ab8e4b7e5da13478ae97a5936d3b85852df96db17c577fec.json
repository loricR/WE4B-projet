{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiserviceService {\n  constructor(_http) {\n    this._http = _http;\n    // connect frontend to backend\n    this.apiUrl = 'http://localhost:3000/user';\n  }\n  // get all data\n  getAllData() {\n    return this._http.get(`${this.apiUrl}`);\n  }\n  // create data\n  createData(data) {\n    console.log(data, 'createAPI');\n    return this._http.post(`${this.apiUrl}`, data);\n  }\n  // delete data\n  deleteData(id) {\n    let ids = id;\n    return this._http.delete(`${this.apiUrl}/${ids}`);\n  }\n  // update data\n  /*updateData(data:any, id:any):Observable<any>{\n    let ids = id;\n    return this._http.put(`${this.apiUrl}/${ids}`,data);\n  }*/\n  updateData(username, password, id) {\n    const data = {\n      username: username,\n      password: password\n    };\n    return this.http.put(`${this.baseURL}/user/${id}`, data);\n  }\n  // get single user data\n  getSingleData(id) {\n    let ids = id;\n    return this._http.get(`${this.apiUrl}/${ids}`);\n  }\n}\nApiserviceService.ɵfac = function ApiserviceService_Factory(t) {\n  return new (t || ApiserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiserviceService,\n  factory: ApiserviceService.ɵfac,\n  providedIn: 'root'\n});\nexport { ApiserviceService };","map":{"version":3,"names":["ApiserviceService","constructor","_http","apiUrl","getAllData","get","createData","data","console","log","post","deleteData","id","ids","delete","updateData","username","password","http","put","baseURL","getSingleData","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\UTBM\\INFO02\\WE4B\\Projet\\frontend\\src\\app\\apiservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiserviceService {\n\n  constructor(private _http:HttpClient) { }\n\n    // connect frontend to backend\n\n    apiUrl = 'http://localhost:3000/user';\n\n    // get all data\n\n    getAllData():Observable<any>{\n\n      return this._http.get(`${this.apiUrl}`);\n    }\n\n    // create data\n\n    createData(data:any):Observable<any>{\n\n      console.log(data,'createAPI');\n\n      return this._http.post(`${this.apiUrl}`,data);\n    }\n\n    // delete data\n\n    deleteData(id:any):Observable<any> {\n\n      let ids=id;\n      return this._http.delete(`${this.apiUrl}/${ids}`);\n\n    }\n\n    // update data\n    /*updateData(data:any, id:any):Observable<any>{\n      let ids = id;\n      return this._http.put(`${this.apiUrl}/${ids}`,data);\n    }*/\n\n    updateData(username: string, password: string, id: number): Observable<any> {\n      const data = {\n        username: username,\n        password: password\n      };\n    \n      return this.http.put<any>(`${this.baseURL}/user/${id}`, data);\n    }\n\n    // get single user data\n    getSingleData(id:any):Observable<any>{\n      let ids = id;\n      return this._http.get(`${this.apiUrl}/${ids}`);\n    }\n}\n"],"mappings":";;AAIA,MAGaA,iBAAiB;EAE5BC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IAEvB;IAEA,KAAAC,MAAM,GAAG,4BAA4B;EAJC;EAMtC;EAEAC,UAAUA,CAAA;IAER,OAAO,IAAI,CAACF,KAAK,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC;EACzC;EAEA;EAEAG,UAAUA,CAACC,IAAQ;IAEjBC,OAAO,CAACC,GAAG,CAACF,IAAI,EAAC,WAAW,CAAC;IAE7B,OAAO,IAAI,CAACL,KAAK,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,EAAE,EAACI,IAAI,CAAC;EAC/C;EAEA;EAEAI,UAAUA,CAACC,EAAM;IAEf,IAAIC,GAAG,GAACD,EAAE;IACV,OAAO,IAAI,CAACV,KAAK,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIU,GAAG,EAAE,CAAC;EAEnD;EAEA;EACA;;;;EAKAE,UAAUA,CAACC,QAAgB,EAAEC,QAAgB,EAAEL,EAAU;IACvD,MAAML,IAAI,GAAG;MACXS,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;KACX;IAED,OAAO,IAAI,CAACC,IAAI,CAACC,GAAG,CAAM,GAAG,IAAI,CAACC,OAAO,SAASR,EAAE,EAAE,EAAEL,IAAI,CAAC;EAC/D;EAEA;EACAc,aAAaA,CAACT,EAAM;IAClB,IAAIC,GAAG,GAAGD,EAAE;IACZ,OAAO,IAAI,CAACV,KAAK,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,IAAIU,GAAG,EAAE,CAAC;EAChD;;AApDSb,iBAAiB,C;mBAAjBA,iBAAiB,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAjBzB,iBAAiB,C;SAAjBA,iBAAiB;EAAA0B,OAAA,EAAjB1B,iBAAiB,CAAA2B,IAAA;EAAAC,UAAA,EAFhB;AAAM;SAEP5B,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}