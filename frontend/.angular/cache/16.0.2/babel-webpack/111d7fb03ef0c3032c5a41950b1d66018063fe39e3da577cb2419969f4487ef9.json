{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ApiserviceService {\n  constructor(_http) {\n    this._http = _http;\n    // connect frontend to backend\n    this.apiUrl = 'http://localhost:3000/user';\n  }\n  // get all data\n  getAllData() {\n    return this._http.get(`${this.apiUrl}`);\n  }\n  // create data\n  createData(data) {\n    console.log(data, 'createAPI');\n    return this._http.post(`${this.apiUrl}`, data);\n  }\n  // delete data\n  deleteData(id) {\n    let ids = id;\n    return this._http.delete(`${this.apiUrl}/${ids}`);\n  }\n  // update data\n  updateData(data, id) {\n    let ids = id;\n    return this._http.put(`${this.apiUrl}/${ids}`, data);\n  }\n}\nApiserviceService.ɵfac = function ApiserviceService_Factory(t) {\n  return new (t || ApiserviceService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiserviceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiserviceService,\n  factory: ApiserviceService.ɵfac,\n  providedIn: 'root'\n});\nexport { ApiserviceService };","map":{"version":3,"names":["ApiserviceService","constructor","_http","apiUrl","getAllData","get","createData","data","console","log","post","deleteData","id","ids","delete","updateData","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\UTBM\\INFO02\\WE4B\\Projet\\frontend\\src\\app\\apiservice.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiserviceService {\n\n  constructor(private _http:HttpClient) { }\n\n    // connect frontend to backend\n\n    apiUrl = 'http://localhost:3000/user';\n\n    // get all data\n\n    getAllData():Observable<any>{\n\n      return this._http.get(`${this.apiUrl}`);\n    }\n\n    // create data\n\n    createData(data:any):Observable<any>{\n\n      console.log(data,'createAPI');\n\n      return this._http.post(`${this.apiUrl}`,data);\n    }\n\n    // delete data\n\n    deleteData(id:any):Observable<any> {\n\n      let ids=id;\n      return this._http.delete(`${this.apiUrl}/${ids}`);\n\n    }\n\n    // update data\n    updateData(data:any, id:any):Observable<any>{\n      let ids = id;\n      return this._http.put(`${this.apiUrl}/${ids}`,data);\n    }\n}\n"],"mappings":";;AAIA,MAGaA,iBAAiB;EAE5BC,YAAoBC,KAAgB;IAAhB,KAAAA,KAAK,GAALA,KAAK;IAEvB;IAEA,KAAAC,MAAM,GAAG,4BAA4B;EAJC;EAMtC;EAEAC,UAAUA,CAAA;IAER,OAAO,IAAI,CAACF,KAAK,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,MAAM,EAAE,CAAC;EACzC;EAEA;EAEAG,UAAUA,CAACC,IAAQ;IAEjBC,OAAO,CAACC,GAAG,CAACF,IAAI,EAAC,WAAW,CAAC;IAE7B,OAAO,IAAI,CAACL,KAAK,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,MAAM,EAAE,EAACI,IAAI,CAAC;EAC/C;EAEA;EAEAI,UAAUA,CAACC,EAAM;IAEf,IAAIC,GAAG,GAACD,EAAE;IACV,OAAO,IAAI,CAACV,KAAK,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIU,GAAG,EAAE,CAAC;EAEnD;EAEA;EACAE,UAAUA,CAACR,IAAQ,EAAEK,EAAM;IACzB,IAAIC,GAAG,GAAGD,EAAE;IACZ,OAAO,IAAI,CAACV,KAAK,CAACc,GAAG,CAAC,GAAG,IAAI,CAACb,MAAM,IAAIU,GAAG,EAAE,EAACN,IAAI,CAAC;EACrD;;AArCSP,iBAAiB,C;mBAAjBA,iBAAiB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAjBpB,iBAAiB,C;SAAjBA,iBAAiB;EAAAqB,OAAA,EAAjBrB,iBAAiB,CAAAsB,IAAA;EAAAC,UAAA,EAFhB;AAAM;SAEPvB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}