{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../apiservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CreateComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"button\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.errormsg);\n  }\n}\nfunction CreateComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"button\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.successmsg);\n  }\n}\nfunction CreateComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_10_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.userSubmit());\n    });\n    i0.ɵɵelementStart(1, \"button\", 13);\n    i0.ɵɵtext(2, \"Cr\\u00E9er\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction CreateComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_11_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.userUpdate());\n    });\n    i0.ɵɵelementStart(1, \"button\", 14);\n    i0.ɵɵtext(2, \"Modifier\");\n    i0.ɵɵelementEnd()();\n  }\n}\nclass CreateComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.userForm = new FormGroup({\n      'username': new FormControl('', Validators.required),\n      'password': new FormControl('', Validators.required),\n      'password2': new FormControl('', [Validators.required, this.passwordMatchValidator.bind(this)])\n    });\n  }\n  ngOnInit() {\n    this.getparamid = this.router.snapshot.paramMap.get('id');\n    this.service.getSingleData(this.getparamid).subscribe(res => {\n      console.log(res, 'res==>');\n      this.userForm.patchValue({\n        username: res.data[0].username,\n        password: res.data[0].password,\n        password2: res.data[0].password\n      });\n    });\n  }\n  // Create user\n  userSubmit() {\n    const username = this.userForm.value.username;\n    const password = this.userForm.value.password;\n    const password2 = this.userForm.value.password2;\n    if (this.userForm.valid) {\n      if (password !== password2) {\n        this.errormsg = 'Les mots de passe ne correspondent pas!';\n      } else {\n        this.service.createData(this.userForm.value).subscribe(res => {\n          console.log(res, 'res==>');\n          this.userForm.reset();\n          this.successmsg = res.message;\n        });\n      }\n    } else {\n      this.errormsg = 'Tous les champs doivent être complétés!';\n    }\n  }\n  passwordMatchValidator(control) {\n    const password = control.get('password')?.value;\n    const password2 = control.get('password2')?.value;\n    return password === password2 ? null : {\n      passwordMismatch: true\n    };\n  }\n  // Update user\n  userUpdate() {}\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.ApiserviceService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 12,\n  vars: 5,\n  consts: [[1, \"container\", \"mt-5\"], [\"class\", \"alert alert-warning alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"alert alert-success alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-lg-4\", \"mt-2\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Entrer votre nom d'utilisateur\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"password\", \"placeholder\", \"Entrer votre mot de passe\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"password2\", \"placeholder\", \"Entrer de nouveau votre mot de passe\", 1, \"form-control\"], [\"class\", \"col-lg-4 mt-2\", 3, \"click\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"btn-close\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"col-lg-4\", \"mt-2\", 3, \"click\"], [1, \"btn\", \"btn-primary\", \"btn-sm\"], [1, \"btn\", \"btn-dark\", \"btn-sm\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CreateComponent_div_1_Template, 4, 1, \"div\", 1);\n      i0.ɵɵtemplate(2, CreateComponent_div_2_Template, 4, 1, \"div\", 2);\n      i0.ɵɵelementStart(3, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.userSubmit();\n      });\n      i0.ɵɵelementStart(4, \"div\", 4);\n      i0.ɵɵelement(5, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 4);\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4);\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, CreateComponent_div_10_Template, 3, 0, \"div\", 8);\n      i0.ɵɵtemplate(11, CreateComponent_div_11_Template, 3, 0, \"div\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errormsg);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.successmsg);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", !ctx.getparamid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.getparamid);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CreateComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errormsg","ctx_r1","successmsg","ɵɵlistener","CreateComponent_div_10_Template_div_click_0_listener","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","userSubmit","CreateComponent_div_11_Template_div_click_0_listener","_r7","ctx_r6","userUpdate","CreateComponent","constructor","service","router","userForm","required","passwordMatchValidator","bind","ngOnInit","getparamid","snapshot","paramMap","get","getSingleData","subscribe","res","console","log","patchValue","username","data","password","password2","value","valid","createData","reset","message","control","passwordMismatch","ɵɵdirectiveInject","i1","ApiserviceService","i2","ActivatedRoute","selectors","decls","vars","consts","template","CreateComponent_Template","rf","ctx","ɵɵtemplate","CreateComponent_div_1_Template","CreateComponent_div_2_Template","CreateComponent_Template_form_ngSubmit_3_listener","CreateComponent_div_10_Template","CreateComponent_div_11_Template","ɵɵproperty"],"sources":["C:\\UTBM\\INFO02\\WE4B\\Projet\\frontend\\src\\app\\create\\create.component.ts","C:\\UTBM\\INFO02\\WE4B\\Projet\\frontend\\src\\app\\create\\create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators, AbstractControl, ValidationErrors} from '@angular/forms';\nimport { ApiserviceService } from '../apiservice.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent {\n\n  constructor(private service:ApiserviceService, private router:ActivatedRoute) {}\n\n  errormsg:any;\n  successmsg:any;\n  getparamid:any;\n\n  ngOnInit():void {\n    this.getparamid = this.router.snapshot.paramMap.get('id');\n    this.service.getSingleData(this.getparamid).subscribe((res)=>{\n      console.log(res,'res==>');\n      this.userForm.patchValue({\n        username:res.data[0].username,\n        password:res.data[0].password,\n        password2:res.data[0].password;\n      });\n\n    });\n  }\n\n  userForm = new FormGroup({\n    'username': new FormControl('', Validators.required),\n    'password': new FormControl('', Validators.required),\n    'password2': new FormControl('', [Validators.required, this.passwordMatchValidator.bind(this)])\n  });\n  \n  // Create user\n  userSubmit() {\n    const username = this.userForm.value.username;\n    const password = this.userForm.value.password;\n    const password2 = this.userForm.value.password2;\n  \n    if (this.userForm.valid) {\n      if (password !== password2) {\n        this.errormsg = 'Les mots de passe ne correspondent pas!';\n      } else {\n        this.service.createData(this.userForm.value).subscribe((res) => {\n          console.log(res, 'res==>');\n          this.userForm.reset();\n          this.successmsg = res.message;\n        });\n      }\n    } else {\n      this.errormsg = 'Tous les champs doivent être complétés!';\n    }\n  }\n\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('password')?.value;\n    const password2 = control.get('password2')?.value;\n  \n    return password === password2 ? null : { passwordMismatch: true };\n  }\n\n  // Update user\n  userUpdate() {\n\n  }\n\n\n}\n","<div class=\"container mt-5\">\n\n\n    <!-- show errormsg  can replace warning with danger for red color-->\n    <div *ngIf=\"errormsg\" class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n        <strong>{{errormsg}}</strong>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n    </div>\n\n    <div *ngIf=\"successmsg\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\n        <strong>{{successmsg}}</strong>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n    </div>\n\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"userSubmit()\">\n\n        <div class=\"col-lg-4 mt-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"username\" placeholder=\"Entrer votre nom d'utilisateur\">\n        </div>\n\n        <div class=\"col-lg-4 mt-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"password\" placeholder=\"Entrer votre mot de passe\">\n        </div>\n\n        <div class=\"col-lg-4 mt-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"password2\" placeholder=\"Entrer de nouveau votre mot de passe\">\n        </div>\n          \n\n        <div class=\"col-lg-4 mt-2\" *ngIf=\"!getparamid\" (click)=\"userSubmit()\">\n            <button class=\"btn btn-primary btn-sm\">Créer</button>\n        </div>\n\n        <div class=\"col-lg-4 mt-2\" *ngIf=\"getparamid\" (click)=\"userUpdate()\">\n            <button class=\"btn btn-dark btn-sm\">Modifier</button>\n        </div>\n\n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}