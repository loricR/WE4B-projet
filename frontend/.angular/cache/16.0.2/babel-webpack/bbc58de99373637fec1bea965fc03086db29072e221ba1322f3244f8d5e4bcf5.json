{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../apiservice.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CreateComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"button\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.errormsg);\n  }\n}\nclass CreateComponent {\n  constructor(service) {\n    this.service = service;\n    this.userForm = new FormGroup({\n      'username': new FormControl('', Validators.required),\n      'password': new FormControl('', Validators.required),\n      'password2': new FormControl('', [Validators.required, this.passwordMatchValidator.bind(this)])\n    });\n  }\n  ngOnInit() {}\n  userSubmit() {\n    const username = this.userForm.value.username;\n    const password = this.userForm.value.password;\n    const password2 = this.userForm.value.password2;\n    if (this.userForm.valid) {\n      if (password !== password2) {\n        this.errormsg = 'Les mots de passe ne correspondent pas!';\n      } else {\n        this.service.createData(this.userForm.value).subscribe(res => {\n          console.log(res, 'res==>');\n          this.userForm.reset();\n          this.successmsg = res.message;\n        });\n      }\n    } else {\n      this.errormsg = 'Tous les champs doivent être complétés!';\n    }\n  }\n  passwordMatchValidator(control) {\n    const password = control.get('password')?.value;\n    const password2 = control.get('password2')?.value;\n    return password === password2 ? null : {\n      passwordMismatch: true\n    };\n  }\n}\nCreateComponent.ɵfac = function CreateComponent_Factory(t) {\n  return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.ApiserviceService));\n};\nCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateComponent,\n  selectors: [[\"app-create\"]],\n  decls: 12,\n  vars: 2,\n  consts: [[1, \"container\", \"mt-5\"], [\"class\", \"alert alert-warning alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-lg-4\", \"mt-2\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Entrer votre nom d'utilisateur\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"password\", \"placeholder\", \"Entrer votre mot de passe\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"password2\", \"placeholder\", \"Entrer de nouveau votre mot de passe\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\", \"btn-sm\"], [\"role\", \"alert\", 1, \"alert\", \"alert-warning\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"btn-close\"]],\n  template: function CreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, CreateComponent_div_1_Template, 4, 1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.userSubmit();\n      });\n      i0.ɵɵelementStart(3, \"div\", 3);\n      i0.ɵɵelement(4, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelement(6, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 3);\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"button\", 7);\n      i0.ɵɵtext(11, \"Cr\\u00E9er\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errormsg);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.userForm);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CreateComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errormsg","CreateComponent","constructor","service","userForm","required","passwordMatchValidator","bind","ngOnInit","userSubmit","username","value","password","password2","valid","createData","subscribe","res","console","log","reset","successmsg","message","control","get","passwordMismatch","ɵɵdirectiveInject","i1","ApiserviceService","selectors","decls","vars","consts","template","CreateComponent_Template","rf","ctx","ɵɵtemplate","CreateComponent_div_1_Template","ɵɵlistener","CreateComponent_Template_form_ngSubmit_2_listener","ɵɵproperty"],"sources":["C:\\UTBM\\INFO02\\WE4B\\Projet\\frontend\\src\\app\\create\\create.component.ts","C:\\UTBM\\INFO02\\WE4B\\Projet\\frontend\\src\\app\\create\\create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators, AbstractControl, ValidationErrors} from '@angular/forms';\nimport { ApiserviceService } from '../apiservice.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent {\n\n  constructor(private service:ApiserviceService) {}\n\n  errormsg:any;\n  successmsg:any;\n\n  ngOnInit():void {\n\n  }\n\n  userForm = new FormGroup({\n    'username': new FormControl('', Validators.required),\n    'password': new FormControl('', Validators.required),\n    'password2': new FormControl('', [Validators.required, this.passwordMatchValidator.bind(this)])\n  });\n  \n  userSubmit() {\n    const username = this.userForm.value.username;\n    const password = this.userForm.value.password;\n    const password2 = this.userForm.value.password2;\n  \n    if (this.userForm.valid) {\n      if (password !== password2) {\n        this.errormsg = 'Les mots de passe ne correspondent pas!';\n      } else {\n        this.service.createData(this.userForm.value).subscribe((res) => {\n          console.log(res, 'res==>');\n          this.userForm.reset();\n          this.successmsg = res.message;\n        });\n      }\n    } else {\n      this.errormsg = 'Tous les champs doivent être complétés!';\n    }\n  }\n\n  passwordMatchValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.get('password')?.value;\n    const password2 = control.get('password2')?.value;\n  \n    return password === password2 ? null : { passwordMismatch: true };\n  }\n\n\n}\n","<div class=\"container mt-5\">\n\n\n    <!-- show errormsg  can replace warning with danger for red color-->\n    <div *ngIf=\"errormsg\" class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n        <strong>{{errormsg}}</strong>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n\n    </div>\n\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"userSubmit()\">\n\n        <div class=\"col-lg-4 mt-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"username\" placeholder=\"Entrer votre nom d'utilisateur\">\n        </div>\n\n        <div class=\"col-lg-4 mt-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"password\" placeholder=\"Entrer votre mot de passe\">\n        </div>\n\n        <div class=\"col-lg-4 mt-2\">\n            <input type=\"text\" class=\"form-control\" formControlName=\"password2\" placeholder=\"Entrer de nouveau votre mot de passe\">\n        </div>\n          \n\n        <div class=\"col-lg-4 mt-2\">\n            <button class=\"btn btn-primary btn-sm\">Créer</button>\n        </div>\n\n    </form>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}