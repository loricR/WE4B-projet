{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../apiservice.service\";\nimport * as i2 from \"@angular/common\";\nfunction ReadComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ReadComponent_tr_15_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const us_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteID(us_r1.ID));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const us_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(us_r1.ID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(us_r1.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(us_r1.password);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(us_r1.dev);\n  }\n}\nclass ReadComponent {\n  constructor(service) {\n    this.service = service;\n  }\n  ngOnInit() {\n    this.service.getAllData().subscribe(res => {\n      console.log(res, \"res==>\");\n      this.readData = res.data;\n    });\n  }\n  // Get delete id\n  deleteID(id) {\n    console.log(id, 'deleteid==>');\n    this.service.deleteData(id).subscribe(res => {\n      console.log(res, \"deleteres==>\");\n      this.successmsg = res.message;\n    });\n  }\n}\nReadComponent.ɵfac = function ReadComponent_Factory(t) {\n  return new (t || ReadComponent)(i0.ɵɵdirectiveInject(i1.ApiserviceService));\n};\nReadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReadComponent,\n  selectors: [[\"app-read\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n  template: function ReadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"table\", 1)(2, \"thead\")(3, \"tr\")(4, \"th\", 2);\n      i0.ɵɵtext(5, \"#\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"th\", 2);\n      i0.ɵɵtext(7, \"username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"th\", 2);\n      i0.ɵɵtext(9, \"password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\", 2);\n      i0.ɵɵtext(11, \"dev\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\", 2);\n      i0.ɵɵtext(13, \"Edits\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, ReadComponent_tr_15_Template, 12, 4, \"tr\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.readData);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { ReadComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ReadComponent_tr_15_Template_button_click_10_listener","restoredCtx","ɵɵrestoreView","_r3","us_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","deleteID","ID","ɵɵadvance","ɵɵtextInterpolate","username","password","dev","ReadComponent","constructor","service","ngOnInit","getAllData","subscribe","res","console","log","readData","data","id","deleteData","successmsg","message","ɵɵdirectiveInject","i1","ApiserviceService","selectors","decls","vars","consts","template","ReadComponent_Template","rf","ctx","ɵɵtemplate","ReadComponent_tr_15_Template","ɵɵproperty"],"sources":["C:\\UTBM\\INFO02\\WE4B\\Projet\\frontend\\src\\app\\read\\read.component.ts","C:\\UTBM\\INFO02\\WE4B\\Projet\\frontend\\src\\app\\read\\read.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {ApiserviceService} from '../apiservice.service';\n\n@Component({\n  selector: 'app-read',\n  templateUrl: './read.component.html',\n  styleUrls: ['./read.component.css']\n})\nexport class ReadComponent implements OnInit {\n\n  constructor(private service:ApiserviceService) {}\n\n  readData:any;\n  successmsg:any;\n\n  ngOnInit():void {\n      this.service.getAllData().subscribe((res)=> {\n        console.log(res,\"res==>\");\n\n        this.readData = res.data;\n\n      });\n  }\n\n\n  // Get delete id\n  deleteID(id:any) {\n\n    console.log(id,'deleteid==>');\n    this.service.deleteData(id).subscribe((res)=>{\n        console.log(res,\"deleteres==>\")\n        this.successmsg = res.message;\n\n    });\n  }\n\n}\n","<div class=\"container mt-5\">\n    <table class=\"table\">\n\n        <thead>\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">username</th>\n                <th scope=\"col\">password</th>\n                <th scope=\"col\">dev</th>\n                <th scope=\"col\">Edits</th>\n            </tr>\n        </thead>\n\n        <tbody>\n            <tr *ngFor = 'let us of readData'>\n                <th scope=\"row\">{{us.ID}}</th>\n                <td>{{us.username}}</td>\n                <td>{{us.password}}</td>\n                <td>{{us.dev}}</td>\n                <td><button class=\"btn btn-sm btn-danger\" (click)=\"deleteID(us.ID)\">Delete</button></td>\n            </tr>\n        </tbody>\n\n\n\n\n\n\n    </table>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}